var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = PlugFlowReactor","category":"page"},{"location":"#PlugFlowReactor","page":"Home","title":"PlugFlowReactor","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Plug is a code for simulating plug flow reactor with detailed surface  or gasphase chemistry. Additionally you may use user defined function for the calculation of reaction rates. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Documentation for PlugFlowReactor.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install the package, use the following commands in the julia REPL","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg\njulia> Pkg.add(\"PlugFlowReactor\")","category":"page"},{"location":"#General-interfaces","page":"Home","title":"General interfaces","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [PlugFlowReactor]","category":"page"},{"location":"#PlugFlowReactor.plug-NTuple{5, Any}","page":"Home","title":"PlugFlowReactor.plug","text":"A function for call from other packages, mainly intended for reactor network modeling \n\nMethod-3\n\nplug(inletcomp, T, p, vel, l; chem, thermoobj, md, geometry)\n\ninletcomp : Dictionary of species name and mole fractions. In the case of gasphase chemistry the inletcomp \n\nmay only contain species that are present at the inlet \n\nT : Temperature in K\np : Pressure in Pa \nvel : inlet velocity in m/s \nl : length of the reactor in m\nchem: Chemistry to be invoked: tuple Chemistry(surfchem, , true, user_defined)\nthermo_obj : Thermo Object \nmd : Mechanism definition(Please refer SurfaceReactions.jl and Ga\ngeometry : tuple of reactor geometry (dia,cat_geom)      \ndia: reactor diameter \ncat_geom : enhancement factor for the reaction rate due to the catalyst geometry effect\n\n\n\n\n\n","category":"method"},{"location":"#PlugFlowReactor.plug-Tuple{AbstractString, AbstractString, Function}","page":"Home","title":"PlugFlowReactor.plug","text":"This is the calling function for executing the plug reactor with userdefined rate calculation\n\nMethod-1\n\nplug(inputfile::AbstractString, libdir::AbstractString; sens= false, surfchem=false, gaschem=false)\n\ninput_file: the xml input file for batch reactor\nlib_dir: the direcrtory in which the data files are present. It must be the relative path\nuser_defined: A function which calculates the species source terms, to be supplied by the user  \n\n\n\n\n\n","category":"method"},{"location":"#PlugFlowReactor.plug-Tuple{AbstractString, AbstractString}","page":"Home","title":"PlugFlowReactor.plug","text":"This is the calling function for executing the plug reactor with chemistry input files \n\nMethod-2\n\nplug(inputfile::AbstractString, libdir::AbstractString; sens= false, surfchem=false, gaschem=false)\n\ninput_file: the xml input file plug flow reactor configuration\nlib_dir: the direcrtory in which the data files are present (mechanism file and therm.dat file). \nsens: sensitivity calculation \nsurfchem : surface chemistry; false implies no surface chemistry calculation \ngaschem : gasphase chemistry; false implies no gasphase chemistry calculation \n\n\n\n\n\n","category":"method"},{"location":"#Governing-equations","page":"Home","title":"Governing equations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The governing equations solved are","category":"page"},{"location":"","page":"Home","title":"Home","text":"fracd (rho u Y_k)dz = dots_k M_k fracA_sLA_c + dotomega_kM_k ","category":"page"},{"location":"","page":"Home","title":"Home","text":"fracd (rho u)dz = sum_k=1^N_g dots_k M_k fracA_sLA_c ","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the above equations, rho is the density (kg/m^3), u is the velocity (m/s), Y_k is the mass fraction of species k, z is the axial coordinate (m), dots_k is the molar production rate of species k due to surface reactions (mol/m^2-s), dotomega_k is the molar production rate of species k due to gasphase reactions (mol/m^3-s), M_k is the molecular weight of species k, A_sL is the surface area per unit length (m), A_c is the cross sectional area (m^2) and eta is surface area enhancement factor. This factor accounts for the actual surface area available for the surface reactions over the actual geometric surface area of the tubular reactor. ","category":"page"},{"location":"#Executing-the-code","page":"Home","title":"Executing the code","text":"","category":"section"},{"location":"#Surface-chemistry","page":"Home","title":"Surface chemistry","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For solving a surface chemistry problem: On the Julia REPL ","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia>using PlugFlowReactor\njulia>plug(\"plug.xml\",\"lib/\", surfchem=true)","category":"page"},{"location":"#Gasphase-chemistry","page":"Home","title":"Gasphase chemistry","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For solving a gasphase chemistry problem: On the Julia REPL ","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia>using PlugFlowReactor\njulia>plug(\"plug.xml\", \"lib/\", gaschem=true)","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the above calls, it is assumed that the input file plug.xml is present in the working directory and ../lib/ is the path to the lib directory relative to the current working directory. The function can be called from any directory and in that case the first argument must point to the plug.xml file relative to the current working directory. The output files will be generated in the directory where plug.xml is present. In general the function takes three optional keyword arguments gaschem, surfchem, and sens. gaschem must be true to simulate gasphase chemistry, surfchem must be true for surface chemistry, and sens must be true whenever sensitivity analysis is performed. ","category":"page"},{"location":"#User-defined-chemistry","page":"Home","title":"User defined chemistry","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For solving the model with user defined chemistry: On the Julia REPL ","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia>using PlugFlowReactor, ReactionCommons\njulia>plug(\"plug.xml\", \"lib/\", udf)","category":"page"},{"location":"","page":"Home","title":"Home","text":"udf is a function having the following signature","category":"page"},{"location":"","page":"Home","title":"Home","text":"function udf(state::UserDefinedState)","category":"page"},{"location":"","page":"Home","title":"Home","text":"where state is a structure defined as follows","category":"page"},{"location":"","page":"Home","title":"Home","text":"struct UserDefinedState\n    T::Float64\n    p::Float64\n    molefracs::Array{Float64,1}\n    molwt::Array{Float64,1}\n    species::Array{String,1}\n    source::Array{Float64,1}\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"The program expects the species source terms in source mols/m3-s depending on whether you are solving surface chemistry problem or gasphase chemistry problem. The example call provided in the runtests.jl returns zero molar production and consumption rates. Within the code the source terms are multiplied with the molecular weight. The order ing of species source terms must be same as the order in wich the species appears in UserState.species.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The structure of the plug.xml input file is shown below.","category":"page"},{"location":"#Input-file-for-surface-chemistry-problems","page":"Home","title":"Input file for surface chemistry problems","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<plug>\n    <gasphase>CH4 H2O H2 CO CO2 O2 N2</gasphase>\n    <molefractions>CH4=0.25,CO2=0.25,N2=0.5</molefractions>\n    <T>1073.15</T>\n    <p>1e5</p>\n    <length>0.3</length>\n    <dia>0.005</dia>\n    <u>0.1</u>\n    <Tw>1073.15</Tw>\n    <isothermal>true</isothermal>\n    <cat-geom-factor>1000</cat-geom-factor>\n    <surface_mech>ch4ni.xml</surface_mech>\n</plug","category":"page"},{"location":"#Input-file-for-gasphase-chemistry-problems","page":"Home","title":"Input file for gasphase chemistry problems","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<plug>\n    <molefractions>CH4=0.25,CO2=0.25,N2=0.5</molefractions>\n    <T>1073.15</T>\n    <p>1e5</p>\n    <length>0.3</length>\n    <dia>0.005</dia>\n    <u>0.1</u>\n    <Tw>1073.15</Tw>\n    <isothermal>true</isothermal>    \n    <gas_mech>ch4ni.xml</gas_mech>\n</plug","category":"page"},{"location":"","page":"Home","title":"Home","text":"The major difference between the input file for surface chemistry problem and gasphase chemistry problem is the <gasphase> tag of xml input. In the case of gasphase chemistry problem, the participating species are read from the mechanism input file, which is specified using the <gas_mech> tag","category":"page"},{"location":"#Input-file-for-user-defined-chemistry-problems","page":"Home","title":"Input file for user defined chemistry problems","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<plug>\n    <molefractions>CH4=0.25,CO2=0.25,N2=0.5</molefractions>\n    <T>1073.15</T>\n    <p>1e5</p>\n    <length>0.3</length>\n    <dia>0.005</dia>\n    <u>0.1</u>\n    <Tw>1073.15</Tw>\n    <isothermal>true</isothermal>    \n</plug","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note Please notice the absence of <gas_mech> and <surface_mech> tags in the case of user defined chemistry","category":"page"},{"location":"","page":"Home","title":"Home","text":"The meaning of different tags is specified below.","category":"page"},{"location":"","page":"Home","title":"Home","text":"<plug> : The root XML tag for Plug\n<gasphase> : list of gas-phase species. The species names must be separated by white spaces or tab\n<molefractions> : inlet mole fraction of the gas-phase species. Instead of mole fractions, mass fractions may also be specified. In that case, the tag must be <massfractions>. You must ensure that the sum of mass or mole fractions specified is unity. There are no internal checks to ascertain this. \n<T>: operating temperature in K\n<p>: initial pressure in Pa\n<length> : length of the reactor in m\n<dia> : diameter of the reactor in m\n<u> : inlet velocity of the reacting mixture in m/s\n<Tw> : wall temperature in K. This option is provided for performing non-isothermal simulation, which is not supported in the current release\n<isothermal> : a boolean which accepts wither true or false. For the current release this must be true\n<cat-geom-factor> : surface area enhancement factor (refer eta in the governing equations)\n<surface_mech> : name of the surface reaction mechanism. Must be specified along with the path","category":"page"},{"location":"#Input-file-download","page":"Home","title":"Input file download","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The xml input file and the lib directory containig other required input files may be downloaded from here.","category":"page"},{"location":"#Output","page":"Home","title":"Output","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The code generates two output files in the same directory where the input file cstr.xml is present.  The file gas_profile.dat contains the mole fraction of the gas phase species as a function of time. The file surf_profile.dat contains the surface coverages of adsorbed species as a function of time.  In addition to these two files, the code also generates terminal output, which shows integration progress. The terminal output is nothing by the integration time. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"An example terminal output is shown below","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> plug(\"plug_surf/plug.xml\",\"lib/\", surfchem=true)\n0.0000e+00\n8.8802e-15\n8.8811e-11\n4.2433e-10\n7.5985e-10\n...\n...\n...\n2.1517e-01\n2.5184e-01\n2.8852e-01\n3.0000e-01\n:Success","category":"page"},{"location":"","page":"Home","title":"Home","text":"A sample output of gas_profile.dat is shown below ","category":"page"},{"location":"","page":"Home","title":"Home","text":"         z           T           p           u         rho         CH4         H2O          H2          CO         CO2          O2          N2\n0.0000e+00  1.0732e+03  1.0000e+05  1.0000e-01  3.2524e-01  2.5000e-01  0.0000e+00  0.0000e+00  0.0000e+00  2.5000e-01  0.0000e+00  5.0000e-01\n8.8802e-15  1.0732e+03  1.0000e+05  1.0000e-01  3.2524e-01  2.5000e-01  1.5726e-11  5.9064e-12  3.7358e-11  2.5000e-01  1.5402e-23  5.0000e-01\n8.8811e-11  1.0732e+03  1.0000e+05  1.0000e-01  3.2524e-01  2.5000e-01  1.5763e-07  5.8187e-08  3.7344e-07  2.5000e-01  1.5149e-19  5.0000e-01\n...\n...\n...\n2.8298e-01  1.0732e+03  1.0000e+05  1.4643e-01  2.2212e-01  1.2200e-02  5.6965e-03  3.1137e-01  3.2276e-01  6.5032e-03  -6.7405e-19 3.4147e-01\n3.0000e-01  1.0732e+03  1.0000e+05  1.4643e-01  2.2212e-01  1.2200e-02  5.6965e-03  3.1137e-01  3.2276e-01  6.5032e-03  -4.3287e-13 3.4147e-01","category":"page"},{"location":"","page":"Home","title":"Home","text":"A sample output of surf_covg.dat is shown below ","category":"page"},{"location":"","page":"Home","title":"Home","text":"         z           T        (NI)       H(NI)       O(NI)     CH4(NI)     H2O(NI)     CO2(NI)      CO(NI)      OH(NI)       C(NI)     HCO(NI)      CH(NI)     CH3(NI)     CH2(NI)\n0.0000e+00  1.0732e+03  8.9517e-01  2.1543e-03  1.0249e-01  1.7333e-09  2.2731e-08  3.4120e-06  1.6186e-04  6.7900e-06  7.3130e-06  1.8236e-17  5.9645e-11  5.3919e-10  3.8717e-10\n8.8802e-15  1.0732e+03  8.9517e-01  2.1543e-03  1.0249e-01  1.7333e-09  2.2731e-08  3.4120e-06  1.6186e-04  6.7900e-06  7.3130e-06  1.8236e-17  5.9645e-11  5.3919e-10  3.8717e-10\n...\n...\n...\n2.8298e-01  1.0732e+03  4.1508e-01  1.5854e-01  5.2598e-05  3.9230e-11  6.8172e-06  5.8269e-07  4.2629e-01  5.5308e-07  2.7830e-05  6.5821e-11  1.5517e-11  9.7290e-11  4.8802e-11\n3.0000e-01  1.0732e+03  4.1508e-01  1.5854e-01  5.2598e-05  3.9230e-11  6.8172e-06  5.8269e-07  4.2629e-01  5.5308e-07  2.7830e-05  6.5820e-11  1.5517e-11  9.7290e-11  4.8802e-11","category":"page"}]
}
